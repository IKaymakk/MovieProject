@model DTO.UI_Dtos.MovieDetailDto
@{
    ViewData["Title"] = "MovieDetails";
    Layout = "~/Views/Shared/_UILayout.cshtml";
    var wallpaper = Model.Image2;
}


<body>
    <div style="background:url('@wallpaper');background-size:cover!important" class="hero mv-single-hero">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                </div>
            </div>
        </div>
    </div>
    <div class="page-single movie-single movie_single">
        <div class="container">
            <div class="row ipad-width2">
                <div class="col-md-4 col-sm-12 col-xs-12">
                    <div class="movie-img sticky-sb">
                        <img src="@Model.Image" alt="">
                        <div class="movie-btn">
                            <div class="btn-transform transform-vertical red">
                                <div><a href="#" class="item item-1 redbtn"> <i class="ion-play"></i>Fragmana Git</a></div>
                                <div><a href="https://www.youtube.com/embed/o-0hcF97wy0" class="item item-2 redbtn fancybox-media hvr-grow"><i class="ion-play"></i></a></div>
                            </div>
                            <div class="btn-transform transform-vertical">
                                <div>
                                    <a href="#" class="item item-1 yellowbtn"> <i class="ion-card"></i>Film Sayfası</a>
                                </div>
                                <div><a href="https://www.imdb.com/" class="item item-2 yellowbtn"><i class="ion-card"></i></a></div>
                            </div>
                        </div>

                    </div>
                </div>

                <div class="col-md-8 col-sm-12 col-xs-12">
                    <div class="movie-single-ct main-content">
                        <h1 class="bd-hd">@Model.Name <span> @Model.ReleaseDate.Year</span></h1>


                        <!----------------- favorite ----------------->
                        <div class="social-btn">
                            <a href="#" class="parent-btn addfav">
                                <i class="ion-heart"></i> Favorilerden Kaldır
                            </a>

                            <div class="hover-bnt">
                                <a href="#" class="parent-btn"><i class="ion-android-share-alt"></i>Paylaş</a>
                                <div class="hvr-item">
                                    <a href="#" class="hvr-grow"><i class="ion-social-facebook"></i></a>
                                    <a href="#" class="hvr-grow"><i class="ion-social-twitter"></i></a>
                                    <a href="#" class="hvr-grow"><i class="ion-social-googleplus"></i></a>
                                    <a href="#" class="hvr-grow"><i class="ion-social-youtube"></i></a>
                                </div>
                            </div>
                        </div>
                        <!----------------- favorite ----------------->
                        <!----------------- movie rate ----------------->
                        <div class="movie-rate">
                            <div class="rate">
                                <i class="ion-android-star"></i>
                                <p>
                                    <span>@Model.Score.ToString("0.0")</span> /10<br>
                                </p>
                            </div>
                            <div class="rate-star">
                                @{
                                    const int maxStars = 10; // Maksimum yıldız sayısı
                                    var starCount = Math.Clamp(Model.Score, 0, maxStars); // Puanı 0-10 arası sınırla

                                    <p>Filme Puan Ver:</p>

                                    for (int i = 1; i <= maxStars; i++)
                                    {
                                        if (i <= starCount)
                                        {
                                            <i class="ion-ios-star"></i> <!-- Dolu yıldız -->
                                        }
                                        else
                                        {
                                            <i class="ion-ios-star-outline"></i> <!-- Boş yıldız -->
                                        }
                                    }
                                }
                            </div>
                        </div>
                        <!----------------- movie rate ----------------->

                        <div class="movie-tabs">
                            <div class="tabs">
                                <ul class="tab-links tabs-mv">
                                    <li style="width:150px" class="active"><a href="#overview">Genel Bakış</a></li>
                                    <li><a href="#reviews">Yorumlar</a></li>
                                    <li><a href="#cast">Oyuncular</a></li>
                                    <li><a href="#moviesrelated">Benzer Filmler</a></li>
                                </ul>
                                <div class="tab-content">
                                    <div id="overview" class="tab active">
                                        <div class="row">
                                            <div class="col-md-8 col-sm-12 col-xs-12">
                                                <p>@Model.Description</p>
                                                <br />
                                                <p>@Model.Description2</p>

                                                <!----------------- movie cast ----------------->
                                                @await Component.InvokeAsync("_MovieDetailsActorsVC", new { id = Model.Id })
                                                <!----------------- movie cast ----------------->

                                            </div>
                                            <!----------------- right block ----------------->
                                            <div class="col-md-4 col-xs-12 col-sm-12">
                                                <div class="sb-it">
                                                    <h6>Yönetmen </h6>
                                                    <p><a href="#">@Model.Director</a></p>
                                                </div>
                                                <div class="sb-it">
                                                    <h6>Yazar </h6>
                                                    <p><a href="#">@Model.Writer</a>
                                                </div>

                                                <div class="sb-it">
                                                    <h6>Kategoriler</h6>
                                                    @foreach (var genre in Model.Genres)
                                                    {
                                                        <p><a href="#">@genre</a></p>
                                                    }
                                                </div>
                                                <div class="sb-it">
                                                    <h6>Yayınlanma Tarihi:</h6>
                                                    <p>@Model.ReleaseDate.ToShortDateString()</p>
                                                </div>
                                                <div class="sb-it">
                                                    <h6>Film Süresi:</h6>
                                                    <p>@Model.RunTime Dakika</p>
                                                </div>

                                                <div class="sb-it">
                                                    <p class="tags">
                                                        <span class="time"><a href="#">#@Model.HashTag</a></span>
                                                    </p>
                                                </div>
                                                <div class="ads">
                                                    <img src="~/html/dest/images/uploads/ads1.png" alt="">
                                                </div>
                                            </div>
                                            <!----------------- right block ----------------->

                                        </div>
                                    </div>

                                    <div id="reviews" class="tab review">
                                        <div class="row">
                                            <div class="rv-hd">
                                                <div class="div">
                                                    <h2>İzleyiciler Bu Film Hakkında Ne Yorum Yapmış?</h2>
                                                </div>
                                                <button onclick="openCommentModal()" class="comment-button redbtn">
                                                    Yorum Ekle
                                                </button>

                                            </div>
                                            <br />
                                            <div class="topbar-filter">
                                                <label>Bu Filme @TempData["CommentCount"] Yorum Yapılmış.</label>
                                                <select>
                                                    <option value="old">Yeniden Eskiye</option>
                                                    <option value="new">Eskiden Yeniye</option>
                                                </select>
                                            </div>

                                            <!-- Yorumlar buraya Ajax ile eklenecek -->
                                            <div id="commentContainer">
                                                <div class="mv-user-review-item">
                                                    <div class="user-infor">
                                                        <img src="images/uploads/userava1.jpg" alt="">
                                                        <div>
                                                            <h3>Best Marvel movie in my opinion</h3>
                                                            <p class="time">
                                                                17 December 2016 by <a href="#"> hawaiipierson</a>
                                                            </p>
                                                        </div>
                                                    </div>
                                                    <p>This is by far one of my favorite movies from the MCU. The introduction of new Characters both good and bad also makes the movie more exciting. giving the characters more of a back story can also help audiences relate more to different characters better, and it connects a bond between the audience and actors or characters. Having seen the movie three times does not bother me here as it is as thrilling and exciting every time I am watching it. In other words, the movie is by far better than previous movies (and I do love everything Marvel), the plotting is splendid (they really do out do themselves in each film, there are no problems watching it more than once.</p>
                                                </div>
                                            </div>

                                            <div class="topbar-filter">
                                                <div class="pagination2">
                                                </div>
                                            </div>

                                            <!-- Yorumlar buraya Ajax ile eklenecek -->

                                        </div>
                                    </div>

                                    <div id="cast" class="tab">
                                        <div class="row">
                                            <h3>Oyuncular & Ekip</h3>
                                            <!-- //== -->
                                            <div class="title-hd-sm">
                                                <h4>Yazar & Yönetmen</h4>
                                            </div>
                                            <div class="mvcast-item">
                                                <div class="cast-it">
                                                    <div class="cast-left">
                                                        <h4>
                                                            @(
                                                                string.Join("",
                                                                Model.Writer?.Split(' ')
                                                                .Where(name => !string.IsNullOrWhiteSpace(name)) // Boş veya null olmayanları filtrele
                                                                .Select(name => name.Length > 0 ? name.Substring(0, 1) : "") // Uzunluk kontrolü
                                                                ) ?? "N/A" // Writer null ise "N/A" göster
                                                                )
                                                        </h4>
                                                        <a href="#">@Model.Writer</a>
                                                    </div>
                                                    <p>...  Yazar</p>
                                                </div>
                                                <div class="cast-it">
                                                    <div class="cast-left">
                                                        <h4>
                                                            @(
                                                                string.Join("",
                                                                Model.Director?.Split(' ')
                                                                .Where(name => !string.IsNullOrWhiteSpace(name)) // Boş veya null olmayanları filtrele
                                                                .Select(name => name.Length > 0 ? name.Substring(0, 1) : "") // Uzunluk kontrolü
                                                                ) ?? "N/A" // Writer null ise "N/A" göster
                                                                )
                                                        </h4>
                                                        <a href="#">@Model.Director</a>
                                                    </div>
                                                    <p>...  Yönetmen</p>
                                                </div>
                                            </div>
                                            <!-- //== -->
                                            <div class="title-hd-sm">
                                                <h4>Oyuncular</h4>
                                            </div>
                                            <!-- //== -->
                                            @await Component.InvokeAsync("_MovieDetailsActors2VC", new { id = Model.Id })
                                            <!-- //== -->
                                        </div>
                                    </div>

                                    <div id="hashtag-container" data-hashtag="@Model.HashTag"></div>

                                    <div id="moviesrelated" class="tab">
                                        <div id="movie-list">
                                            <div class="row">
                                                <div class="movie-item-style-2">
                                                    <img src="images/uploads/mv1.jpg" alt="">
                                                    <div class="mv-item-infor">
                                                        <h6><a href="#">oblivion <span>(2012)</span></a></h6>
                                                        <p class="rate"><i class="ion-android-star"></i><span>8.1</span> /10</p>
                                                        <p class="describe">Earth's mightiest heroes must come together and learn to fight as a team if they are to stop the mischievous Loki and his alien army from enslaving humanity...</p>
                                                        <p class="run-time"> Run Time: 2h21’    .     <span>MMPA: PG-13 </span>    .     <span>Release: 1 May 2015</span></p>
                                                        <p>Director: <a href="#">Joss Whedon</a></p>
                                                        <p>Stars: <a href="#">Robert Downey Jr.,</a> <a href="#">Chris Evans,</a> <a href="#">  Chris Hemsworth</a></p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>


                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @await Html.PartialAsync("_CommentModal")


    <script src="js/jquery.js"></script>
    <script src="js/plugins.js"></script>
    <script src="js/plugins2.js"></script>
    <script src="js/custom.js"></script>
    <script src="/js/commentjs.js"></script>

</body>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


<script>
    $(document).ready(function () {
        // Sayfa yüklendiğinde favori durumu kontrol et
        checkFavoriteStatus();

        // Butona tıklandığında favori ekleme/kaldırma işlemi
        $(".addfav").click(function (e) {
            e.preventDefault(); // Sayfanın yenilenmesini engelle


            // Favori ekleme/kaldırma işlemi
            $.ajax({
                url: "/Movie/AddFavoriteMovie", // Favori ekleme/kaldırma işlemi
                type: "POST",
                success: function (response) {
                    if (response.success) {
                        toastr.success(response.message, "Başarılı!");

                        checkFavoriteStatus();

                        setTimeout(function () {
                            location.reload(); // Sayfayı yenileyin
                        }, 1000); 
                    } else {
                        toastr.error(response.message);
                        checkFavoriteStatus();
                        setTimeout(function () {
                            location.reload(); // Sayfayı yenileyin
                        }, 1000);
                    }
                },
                error: function (xhr) {
                    console.log(xhr.responseText);
                    toastr.error("Bir hata oluştu, lütfen tekrar deneyin.", "Hata!");
                    $(".addfav").html('<i class="ion-heart"></i> Hata Oluştu');
                }
            });
        });

        // Favori durumu kontrolü yapan fonksiyon
        function checkFavoriteStatus() {
            $.ajax({
                url: "/Movie/CheckFavoriteStatus", // Favori durumu kontrol et
                type: "POST",
                success: function (response) {
                    if (response.success !== undefined) {
                        if (response.isFavorited === true) {
                            $(".addfav").html('<i class="ion-heart"></i> Favorilerden Kaldır');
                        } else if (response.isFavorited === false) {
                            $(".addfav").html('<i class="ion-heart"></i> Favorilere Ekle');
                        } 
                    } else {
                        $(".addfav").html('<i class="ion-heart"></i> Favori Durumu Bulunamadı');
                    }
                },
                error: function (xhr) {
                    console.log(xhr.responseText);
                    toastr.error("Favori durumu kontrol edilirken bir hata oluştu.");
                    $(".addfav").html('<i class="ion-heart"></i> Hata Oluştu');
                }
            });
        }
    });


</script>


  


<script>
    $(document).ready(function () {
        var movieId = @ViewBag.MovieId;
        var page = 1;
        var pageSize = 3;

        loadComments(page, getSortBy());

        function loadComments(page, sortBy) {
            $.ajax({
                url: '/Comment/GetCommentsByMovieId',
                method: 'GET',
                data: { id: movieId, sortBy: sortBy, page: page, pageSize: pageSize },
                success: function (data) {
                    console.log("API’den gelen veri:", data); // Gelen veriyi kontrol et
                    if (!data || !data.comments) {
                        toastr.error("Yorumlar yüklenirken hata oluştu!");
                        return;
                    }

                    renderComments(data.comments);
                    updatePagination(data.totalPages, page);
                },
                error: function () {
                    toastr.error('Yorumlar yüklenirken bir hata oluştu!');
                }
            });
        }

        function renderComments(comments) {
            var commentContainer = $('#commentContainer');
            commentContainer.empty();

            if (comments.length === 0) {
                commentContainer.append('<p>Henüz yorum yapılmamış.</p>');
            } else {
                comments.forEach(function (comment) {
                    var commentHtml = `
                                                <div class="mv-user-review-item">
                                                    <div class="user-infor">
                                                        <img src="${comment.appUserImage}" style="width:50px;height:50px;border-radius:10px" alt="User Avatar">
                                                        <div>
                                                            <h3>${comment.commentTitle}</h3>
                                                            <p class="time">${new Date(comment.createdDate).toLocaleDateString()}
                                                                <a style="margin-left:1em" href="#">${comment.userName}</a>
                                                            </p>
                                                        </div>
                                                    </div>
                                                    <br>
                                                    <p>${comment.commentText}</p>
                                                </div>`;
                    commentContainer.append(commentHtml);
                });
            }
        }

        function updatePagination(totalPages, currentPage) {
            console.log("Toplam Sayfa Sayısı:", totalPages, "Mevcut Sayfa:", currentPage); // Debug için

            if (!totalPages || totalPages < 1) {
                $('.pagination2').empty();
                return;
            }

            var paginationHtml = '';

            if (currentPage > 1) {
                paginationHtml += `<a href="#" data-page="${currentPage - 1}"><i class="ion-arrow-left-b"></i></a>`;
            }

            for (var i = 1; i <= totalPages; i++) {
                paginationHtml += `<a href="#" class="${i === currentPage ? 'active' : ''}" data-page="${i}">${i}</a>`;
            }

            if (currentPage < totalPages) {
                paginationHtml += `<a href="#" data-page="${currentPage + 1}"><i class="ion-arrow-right-b"></i></a>`;
            }

            $('.pagination2').html(paginationHtml);
        }

        $(document).on('click', '.pagination2 a', function (e) {
            e.preventDefault();
            var newPage = $(this).data('page');
            loadComments(newPage, getSortBy());
        });

        $('.topbar-filter select').change(function () {
            loadComments(1, getSortBy()); // Sıralama değişince ilk sayfaya dön
        });

        function getSortBy() {
            return $('.topbar-filter select').val();
        }
    });

</script>

<script>
    $(document).ready(function () {
        const hashtag = $("#hashtag-container").data("hashtag");
        const apiUrl = `https://localhost:44358/api/Movie/GetSimiilarMovies?Hashtag=${encodeURIComponent(hashtag)}`;

        $.ajax({
            url: apiUrl,
            method: 'GET',
            success: function (data) {
                renderMovies(data);
            },
            error: function (xhr, status, error) {
                console.error("Durum Kodu:", xhr.status);
                console.error("Hata Mesajı:", error);
                console.error("Sunucudan Gelen Yanıt:", xhr.responseText);
                alert(`Hata: ${xhr.status} - ${xhr.responseText || "Sunucudan yanıt alınamadı!"}`);
            }
        });


    });

    function renderMovies(movies) {
        const movieListContainer = $("#movie-list");
        movieListContainer.empty();

        if (movies.length === 0) {
            movieListContainer.append("<p> Benzer Film Bulunamadı.</p>");
            return;
        }

        movies.forEach(movie => {
            // Açıklamayı kısaltıyoruz
            let shortDescription = movie.description;
            if (shortDescription.length > 350) {
                shortDescription = shortDescription.substring(0, 350) + '...'; // 200 karakterden sonrası '...' ile kesilir
            }

            const movieItem = `
                                                                                                                <div class="movie-item-style-2">
                                                                                                                            <img style="height:330px;" src="${movie.image}" alt="${movie.name}">
                                                                                                                    <div class="mv-item-infor">
                                                                                                                        <h6><a href="/Movie/MovieDetails/${movie.id}">${movie.name} <span>(${new Date(movie.releaseDate).getFullYear()})</span></a></h6>
                                                                                                                        <p class="rate"><i class="ion-android-star"></i><span>${movie.score}</span> /10</p>
                                                                                                                      <a href="/Movie/MovieDetails/${movie.id}">
                                                                                                                        <p class="describe">${shortDescription}</p>
                                                                                                                     </a>
                                                                                                                        <p class="run-time">Film Süresi: ${movie.runTime} min</p>
                                                                                                                        <p>Yönetmen: <a href="#">${movie.director}</a></p>
                                                                                                                        <p>Yazar: <a href="#">${movie.writer}</a></p>
                                                                                                                    </div>
                                                                                                                </div>`;
            movieListContainer.append(movieItem); // Listeye ekliyoruz
        });
    }
</script>
